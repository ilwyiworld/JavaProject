// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lopq_model.proto
/**
 * Licensed to the Apache Software Foundation （ASF） under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * （the "License"）； you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.elasticsearch.protobuf.generated;

public final class LOPQModelParameters {
  private LOPQModelParameters() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface VectorOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated float values = 1 [packed = true];
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    java.util.List<Float> getValuesList();
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    int getValuesCount();
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    float getValues(int index);
  }
  /**
   * Protobuf type {@code org.elasticsearch.protobuf.generated.Vector}
   */
  public static final class Vector extends
      com.google.protobuf.GeneratedMessage
      implements VectorOrBuilder {
    // Use Vector.newBuilder() to construct.
    private Vector(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Vector(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Vector defaultInstance;
    public static Vector getDefaultInstance() {
      return defaultInstance;
    }

    public Vector getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Vector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                values_ = new java.util.ArrayList<Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                values_ = new java.util.ArrayList<Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Vector_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Vector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Vector.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Vector> PARSER =
        new com.google.protobuf.AbstractParser<Vector>() {
      public Vector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Vector(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Vector> getParserForType() {
      return PARSER;
    }

    // repeated float values = 1 [packed = true];
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<Float> values_;
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    public java.util.List<Float>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    public float getValues(int index) {
      return values_.get(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    private void initFields() {
      values_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValuesList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloatNoTag(values_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Vector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Vector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Vector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Vector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Vector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Vector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Vector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Vector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Vector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Vector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Vector prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.elasticsearch.protobuf.generated.Vector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements VectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Vector_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Vector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Vector.class, Builder.class);
      }

      // Construct using com.ngdata.hbaseindexer.faceRetrieval.protobuf.generated.LOPQModelParameters.Vector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Vector_descriptor;
      }

      public Vector getDefaultInstanceForType() {
        return Vector.getDefaultInstance();
      }

      public Vector build() {
        Vector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Vector buildPartial() {
        Vector result = new Vector(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Vector) {
          return mergeFrom((Vector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Vector other) {
        if (other == Vector.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Vector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Vector) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated float values = 1 [packed = true];
      private java.util.List<Float> values_ = java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<Float>(values_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public java.util.List<Float>
          getValuesList() {
        return java.util.Collections.unmodifiableList(values_);
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public float getValues(int index) {
        return values_.get(index);
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder addAllValues(
          Iterable<? extends Float> values) {
        ensureValuesIsMutable();
        super.addAll(values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder clearValues() {
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.elasticsearch.protobuf.generated.Vector)
    }

    static {
      defaultInstance = new Vector(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.elasticsearch.protobuf.generated.Vector)
  }

  public interface MatrixOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated float values = 1 [packed = true];
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    java.util.List<Float> getValuesList();
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    int getValuesCount();
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    float getValues(int index);

    // repeated uint32 shape = 2;
    /**
     * <code>repeated uint32 shape = 2;</code>
     */
    java.util.List<Integer> getShapeList();
    /**
     * <code>repeated uint32 shape = 2;</code>
     */
    int getShapeCount();
    /**
     * <code>repeated uint32 shape = 2;</code>
     */
    int getShape(int index);
  }
  /**
   * Protobuf type {@code org.elasticsearch.protobuf.generated.Matrix}
   */
  public static final class Matrix extends
      com.google.protobuf.GeneratedMessage
      implements MatrixOrBuilder {
    // Use Matrix.newBuilder() to construct.
    private Matrix(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Matrix(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Matrix defaultInstance;
    public static Matrix getDefaultInstance() {
      return defaultInstance;
    }

    public Matrix getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Matrix(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                values_ = new java.util.ArrayList<Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                values_ = new java.util.ArrayList<Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                values_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                shape_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              shape_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                shape_ = new java.util.ArrayList<Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Matrix_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Matrix_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Matrix.class, Builder.class);
    }

    public static com.google.protobuf.Parser<Matrix> PARSER =
        new com.google.protobuf.AbstractParser<Matrix>() {
      public Matrix parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Matrix(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<Matrix> getParserForType() {
      return PARSER;
    }

    // repeated float values = 1 [packed = true];
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<Float> values_;
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    public java.util.List<Float>
        getValuesList() {
      return values_;
    }
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated float values = 1 [packed = true];</code>
     */
    public float getValues(int index) {
      return values_.get(index);
    }
    private int valuesMemoizedSerializedSize = -1;

    // repeated uint32 shape = 2;
    public static final int SHAPE_FIELD_NUMBER = 2;
    private java.util.List<Integer> shape_;
    /**
     * <code>repeated uint32 shape = 2;</code>
     */
    public java.util.List<Integer>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated uint32 shape = 2;</code>
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated uint32 shape = 2;</code>
     */
    public int getShape(int index) {
      return shape_.get(index);
    }

    private void initFields() {
      values_ = java.util.Collections.emptyList();
      shape_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValuesList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(valuesMemoizedSerializedSize);
      }
      for (int i = 0; i < values_.size(); i++) {
        output.writeFloatNoTag(values_.get(i));
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeUInt32(2, shape_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getValuesList().size();
        size += dataSize;
        if (!getValuesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valuesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(shape_.get(i));
        }
        size += dataSize;
        size += 1 * getShapeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static Matrix parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Matrix parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Matrix parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Matrix parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Matrix parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Matrix parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static Matrix parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static Matrix parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static Matrix parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static Matrix parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Matrix prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.elasticsearch.protobuf.generated.Matrix}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements MatrixOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Matrix_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Matrix_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Matrix.class, Builder.class);
      }

      // Construct using com.ngdata.hbaseindexer.faceRetrieval.protobuf.generated.LOPQModelParameters.Matrix.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_Matrix_descriptor;
      }

      public Matrix getDefaultInstanceForType() {
        return Matrix.getDefaultInstance();
      }

      public Matrix build() {
        Matrix result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public Matrix buildPartial() {
        Matrix result = new Matrix(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = java.util.Collections.unmodifiableList(values_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.values_ = values_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.shape_ = shape_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Matrix) {
          return mergeFrom((Matrix)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Matrix other) {
        if (other == Matrix.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (values_.isEmpty()) {
            values_ = other.values_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValuesIsMutable();
            values_.addAll(other.values_);
          }
          onChanged();
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Matrix parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Matrix) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated float values = 1 [packed = true];
      private java.util.List<Float> values_ = java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          values_ = new java.util.ArrayList<Float>(values_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public java.util.List<Float>
          getValuesList() {
        return java.util.Collections.unmodifiableList(values_);
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public int getValuesCount() {
        return values_.size();
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public float getValues(int index) {
        return values_.get(index);
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder setValues(
          int index, float value) {
        ensureValuesIsMutable();
        values_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder addValues(float value) {
        ensureValuesIsMutable();
        values_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder addAllValues(
          Iterable<? extends Float> values) {
        ensureValuesIsMutable();
        super.addAll(values, values_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float values = 1 [packed = true];</code>
       */
      public Builder clearValues() {
        values_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // repeated uint32 shape = 2;
      private java.util.List<Integer> shape_ = java.util.Collections.emptyList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = new java.util.ArrayList<Integer>(shape_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 shape = 2;</code>
       */
      public java.util.List<Integer>
          getShapeList() {
        return java.util.Collections.unmodifiableList(shape_);
      }
      /**
       * <code>repeated uint32 shape = 2;</code>
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated uint32 shape = 2;</code>
       */
      public int getShape(int index) {
        return shape_.get(index);
      }
      /**
       * <code>repeated uint32 shape = 2;</code>
       */
      public Builder setShape(
          int index, int value) {
        ensureShapeIsMutable();
        shape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 shape = 2;</code>
       */
      public Builder addShape(int value) {
        ensureShapeIsMutable();
        shape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 shape = 2;</code>
       */
      public Builder addAllShape(
          Iterable<? extends Integer> values) {
        ensureShapeIsMutable();
        super.addAll(values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 shape = 2;</code>
       */
      public Builder clearShape() {
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.elasticsearch.protobuf.generated.Matrix)
    }

    static {
      defaultInstance = new Matrix(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.elasticsearch.protobuf.generated.Matrix)
  }

  public interface LOPQModelParamsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional uint32 D = 1;
    /**
     * <code>optional uint32 D = 1;</code>
     *
     * <pre>
     * dimensionality of original vectors
     * </pre>
     */
    boolean hasD();
    /**
     * <code>optional uint32 D = 1;</code>
     *
     * <pre>
     * dimensionality of original vectors
     * </pre>
     */
    int getD();

    // optional uint32 V = 2;
    /**
     * <code>optional uint32 V = 2;</code>
     *
     * <pre>
     * number of coarse quantizer centroids
     * </pre>
     */
    boolean hasV();
    /**
     * <code>optional uint32 V = 2;</code>
     *
     * <pre>
     * number of coarse quantizer centroids
     * </pre>
     */
    int getV();

    // optional uint32 M = 3;
    /**
     * <code>optional uint32 M = 3;</code>
     *
     * <pre>
     * number of subvectors
     * </pre>
     */
    boolean hasM();
    /**
     * <code>optional uint32 M = 3;</code>
     *
     * <pre>
     * number of subvectors
     * </pre>
     */
    int getM();

    // optional uint32 num_subquantizers = 4;
    /**
     * <code>optional uint32 num_subquantizers = 4;</code>
     *
     * <pre>
     * number of subquantizer clusters
     * </pre>
     */
    boolean hasNumSubquantizers();
    /**
     * <code>optional uint32 num_subquantizers = 4;</code>
     *
     * <pre>
     * number of subquantizer clusters
     * </pre>
     */
    int getNumSubquantizers();

    // repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    java.util.List<Matrix>
        getCsList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    Matrix getCs(int index);
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    int getCsCount();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    java.util.List<? extends MatrixOrBuilder>
        getCsOrBuilderList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    MatrixOrBuilder getCsOrBuilder(
            int index);

    // repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    java.util.List<Matrix>
        getRsList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    Matrix getRs(int index);
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    int getRsCount();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    java.util.List<? extends MatrixOrBuilder>
        getRsOrBuilderList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    MatrixOrBuilder getRsOrBuilder(
            int index);

    // repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    java.util.List<Vector>
        getMusList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    Vector getMus(int index);
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    int getMusCount();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    java.util.List<? extends VectorOrBuilder>
        getMusOrBuilderList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    VectorOrBuilder getMusOrBuilder(
            int index);

    // repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    java.util.List<Matrix>
        getSubsList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    Matrix getSubs(int index);
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    int getSubsCount();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    java.util.List<? extends MatrixOrBuilder>
        getSubsOrBuilderList();
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    MatrixOrBuilder getSubsOrBuilder(
            int index);
  }
  /**
   * Protobuf type {@code org.elasticsearch.protobuf.generated.LOPQModelParams}
   *
   * <pre>
   * lopq model params
   * file extension: .lopq
   * </pre>
   */
  public static final class LOPQModelParams extends
      com.google.protobuf.GeneratedMessage
      implements LOPQModelParamsOrBuilder {
    // Use LOPQModelParams.newBuilder() to construct.
    private LOPQModelParams(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private LOPQModelParams(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final LOPQModelParams defaultInstance;
    public static LOPQModelParams getDefaultInstance() {
      return defaultInstance;
    }

    public LOPQModelParams getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private LOPQModelParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              d_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              v_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              m_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              numSubquantizers_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                cs_ = new java.util.ArrayList<Matrix>();
                mutable_bitField0_ |= 0x00000010;
              }
              cs_.add(input.readMessage(Matrix.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                rs_ = new java.util.ArrayList<Matrix>();
                mutable_bitField0_ |= 0x00000020;
              }
              rs_.add(input.readMessage(Matrix.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                mus_ = new java.util.ArrayList<Vector>();
                mutable_bitField0_ |= 0x00000040;
              }
              mus_.add(input.readMessage(Vector.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                subs_ = new java.util.ArrayList<Matrix>();
                mutable_bitField0_ |= 0x00000080;
              }
              subs_.add(input.readMessage(Matrix.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          cs_ = java.util.Collections.unmodifiableList(cs_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          rs_ = java.util.Collections.unmodifiableList(rs_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          mus_ = java.util.Collections.unmodifiableList(mus_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          subs_ = java.util.Collections.unmodifiableList(subs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              LOPQModelParams.class, Builder.class);
    }

    public static com.google.protobuf.Parser<LOPQModelParams> PARSER =
        new com.google.protobuf.AbstractParser<LOPQModelParams>() {
      public LOPQModelParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LOPQModelParams(input, extensionRegistry);
      }
    };

    @Override
    public com.google.protobuf.Parser<LOPQModelParams> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional uint32 D = 1;
    public static final int D_FIELD_NUMBER = 1;
    private int d_;
    /**
     * <code>optional uint32 D = 1;</code>
     *
     * <pre>
     * dimensionality of original vectors
     * </pre>
     */
    public boolean hasD() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 D = 1;</code>
     *
     * <pre>
     * dimensionality of original vectors
     * </pre>
     */
    public int getD() {
      return d_;
    }

    // optional uint32 V = 2;
    public static final int V_FIELD_NUMBER = 2;
    private int v_;
    /**
     * <code>optional uint32 V = 2;</code>
     *
     * <pre>
     * number of coarse quantizer centroids
     * </pre>
     */
    public boolean hasV() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 V = 2;</code>
     *
     * <pre>
     * number of coarse quantizer centroids
     * </pre>
     */
    public int getV() {
      return v_;
    }

    // optional uint32 M = 3;
    public static final int M_FIELD_NUMBER = 3;
    private int m_;
    /**
     * <code>optional uint32 M = 3;</code>
     *
     * <pre>
     * number of subvectors
     * </pre>
     */
    public boolean hasM() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 M = 3;</code>
     *
     * <pre>
     * number of subvectors
     * </pre>
     */
    public int getM() {
      return m_;
    }

    // optional uint32 num_subquantizers = 4;
    public static final int NUM_SUBQUANTIZERS_FIELD_NUMBER = 4;
    private int numSubquantizers_;
    /**
     * <code>optional uint32 num_subquantizers = 4;</code>
     *
     * <pre>
     * number of subquantizer clusters
     * </pre>
     */
    public boolean hasNumSubquantizers() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 num_subquantizers = 4;</code>
     *
     * <pre>
     * number of subquantizer clusters
     * </pre>
     */
    public int getNumSubquantizers() {
      return numSubquantizers_;
    }

    // repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;
    public static final int CS_FIELD_NUMBER = 5;
    private java.util.List<Matrix> cs_;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    public java.util.List<Matrix> getCsList() {
      return cs_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    public java.util.List<? extends MatrixOrBuilder>
        getCsOrBuilderList() {
      return cs_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    public int getCsCount() {
      return cs_.size();
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    public Matrix getCs(int index) {
      return cs_.get(index);
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
     *
     * <pre>
     * coarse quantizer centroids - 2 of these; size V x (D/2)
     * </pre>
     */
    public MatrixOrBuilder getCsOrBuilder(
        int index) {
      return cs_.get(index);
    }

    // repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;
    public static final int RS_FIELD_NUMBER = 6;
    private java.util.List<Matrix> rs_;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    public java.util.List<Matrix> getRsList() {
      return rs_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    public java.util.List<? extends MatrixOrBuilder>
        getRsOrBuilderList() {
      return rs_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    public int getRsCount() {
      return rs_.size();
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    public Matrix getRs(int index) {
      return rs_.get(index);
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
     *
     * <pre>
     * rotations - 2 * V of these, each size D/2 x D/2
     * </pre>
     */
    public MatrixOrBuilder getRsOrBuilder(
        int index) {
      return rs_.get(index);
    }

    // repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;
    public static final int MUS_FIELD_NUMBER = 7;
    private java.util.List<Vector> mus_;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    public java.util.List<Vector> getMusList() {
      return mus_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    public java.util.List<? extends VectorOrBuilder>
        getMusOrBuilderList() {
      return mus_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    public int getMusCount() {
      return mus_.size();
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    public Vector getMus(int index) {
      return mus_.get(index);
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
     *
     * <pre>
     * residual means - 2 * V of these, each size D/2
     * </pre>
     */
    public VectorOrBuilder getMusOrBuilder(
        int index) {
      return mus_.get(index);
    }

    // repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;
    public static final int SUBS_FIELD_NUMBER = 8;
    private java.util.List<Matrix> subs_;
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    public java.util.List<Matrix> getSubsList() {
      return subs_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    public java.util.List<? extends MatrixOrBuilder>
        getSubsOrBuilderList() {
      return subs_;
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    public int getSubsCount() {
      return subs_.size();
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    public Matrix getSubs(int index) {
      return subs_.get(index);
    }
    /**
     * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
     *
     * <pre>
     * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
     * </pre>
     */
    public MatrixOrBuilder getSubsOrBuilder(
        int index) {
      return subs_.get(index);
    }

    private void initFields() {
      d_ = 0;
      v_ = 0;
      m_ = 0;
      numSubquantizers_ = 0;
      cs_ = java.util.Collections.emptyList();
      rs_ = java.util.Collections.emptyList();
      mus_ = java.util.Collections.emptyList();
      subs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, d_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, v_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, m_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, numSubquantizers_);
      }
      for (int i = 0; i < cs_.size(); i++) {
        output.writeMessage(5, cs_.get(i));
      }
      for (int i = 0; i < rs_.size(); i++) {
        output.writeMessage(6, rs_.get(i));
      }
      for (int i = 0; i < mus_.size(); i++) {
        output.writeMessage(7, mus_.get(i));
      }
      for (int i = 0; i < subs_.size(); i++) {
        output.writeMessage(8, subs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, d_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, v_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, m_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, numSubquantizers_);
      }
      for (int i = 0; i < cs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, cs_.get(i));
      }
      for (int i = 0; i < rs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, rs_.get(i));
      }
      for (int i = 0; i < mus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, mus_.get(i));
      }
      for (int i = 0; i < subs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, subs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static LOPQModelParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LOPQModelParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LOPQModelParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static LOPQModelParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static LOPQModelParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static LOPQModelParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static LOPQModelParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static LOPQModelParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static LOPQModelParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static LOPQModelParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(LOPQModelParams prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.elasticsearch.protobuf.generated.LOPQModelParams}
     *
     * <pre>
     * lopq model params
     * file extension: .lopq
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements LOPQModelParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                LOPQModelParams.class, Builder.class);
      }

      // Construct using com.ngdata.hbaseindexer.faceRetrieval.protobuf.generated.LOPQModelParameters.LOPQModelParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCsFieldBuilder();
          getRsFieldBuilder();
          getMusFieldBuilder();
          getSubsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        d_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        v_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        m_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        numSubquantizers_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (csBuilder_ == null) {
          cs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          csBuilder_.clear();
        }
        if (rsBuilder_ == null) {
          rs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          rsBuilder_.clear();
        }
        if (musBuilder_ == null) {
          mus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          musBuilder_.clear();
        }
        if (subsBuilder_ == null) {
          subs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          subsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return LOPQModelParameters.internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_descriptor;
      }

      public LOPQModelParams getDefaultInstanceForType() {
        return LOPQModelParams.getDefaultInstance();
      }

      public LOPQModelParams build() {
        LOPQModelParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public LOPQModelParams buildPartial() {
        LOPQModelParams result = new LOPQModelParams(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.d_ = d_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.v_ = v_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.m_ = m_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.numSubquantizers_ = numSubquantizers_;
        if (csBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            cs_ = java.util.Collections.unmodifiableList(cs_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.cs_ = cs_;
        } else {
          result.cs_ = csBuilder_.build();
        }
        if (rsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            rs_ = java.util.Collections.unmodifiableList(rs_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.rs_ = rs_;
        } else {
          result.rs_ = rsBuilder_.build();
        }
        if (musBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            mus_ = java.util.Collections.unmodifiableList(mus_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.mus_ = mus_;
        } else {
          result.mus_ = musBuilder_.build();
        }
        if (subsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            subs_ = java.util.Collections.unmodifiableList(subs_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.subs_ = subs_;
        } else {
          result.subs_ = subsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof LOPQModelParams) {
          return mergeFrom((LOPQModelParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(LOPQModelParams other) {
        if (other == LOPQModelParams.getDefaultInstance()) return this;
        if (other.hasD()) {
          setD(other.getD());
        }
        if (other.hasV()) {
          setV(other.getV());
        }
        if (other.hasM()) {
          setM(other.getM());
        }
        if (other.hasNumSubquantizers()) {
          setNumSubquantizers(other.getNumSubquantizers());
        }
        if (csBuilder_ == null) {
          if (!other.cs_.isEmpty()) {
            if (cs_.isEmpty()) {
              cs_ = other.cs_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureCsIsMutable();
              cs_.addAll(other.cs_);
            }
            onChanged();
          }
        } else {
          if (!other.cs_.isEmpty()) {
            if (csBuilder_.isEmpty()) {
              csBuilder_.dispose();
              csBuilder_ = null;
              cs_ = other.cs_;
              bitField0_ = (bitField0_ & ~0x00000010);
              csBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCsFieldBuilder() : null;
            } else {
              csBuilder_.addAllMessages(other.cs_);
            }
          }
        }
        if (rsBuilder_ == null) {
          if (!other.rs_.isEmpty()) {
            if (rs_.isEmpty()) {
              rs_ = other.rs_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureRsIsMutable();
              rs_.addAll(other.rs_);
            }
            onChanged();
          }
        } else {
          if (!other.rs_.isEmpty()) {
            if (rsBuilder_.isEmpty()) {
              rsBuilder_.dispose();
              rsBuilder_ = null;
              rs_ = other.rs_;
              bitField0_ = (bitField0_ & ~0x00000020);
              rsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRsFieldBuilder() : null;
            } else {
              rsBuilder_.addAllMessages(other.rs_);
            }
          }
        }
        if (musBuilder_ == null) {
          if (!other.mus_.isEmpty()) {
            if (mus_.isEmpty()) {
              mus_ = other.mus_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureMusIsMutable();
              mus_.addAll(other.mus_);
            }
            onChanged();
          }
        } else {
          if (!other.mus_.isEmpty()) {
            if (musBuilder_.isEmpty()) {
              musBuilder_.dispose();
              musBuilder_ = null;
              mus_ = other.mus_;
              bitField0_ = (bitField0_ & ~0x00000040);
              musBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMusFieldBuilder() : null;
            } else {
              musBuilder_.addAllMessages(other.mus_);
            }
          }
        }
        if (subsBuilder_ == null) {
          if (!other.subs_.isEmpty()) {
            if (subs_.isEmpty()) {
              subs_ = other.subs_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureSubsIsMutable();
              subs_.addAll(other.subs_);
            }
            onChanged();
          }
        } else {
          if (!other.subs_.isEmpty()) {
            if (subsBuilder_.isEmpty()) {
              subsBuilder_.dispose();
              subsBuilder_ = null;
              subs_ = other.subs_;
              bitField0_ = (bitField0_ & ~0x00000080);
              subsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSubsFieldBuilder() : null;
            } else {
              subsBuilder_.addAllMessages(other.subs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        LOPQModelParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (LOPQModelParams) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional uint32 D = 1;
      private int d_ ;
      /**
       * <code>optional uint32 D = 1;</code>
       *
       * <pre>
       * dimensionality of original vectors
       * </pre>
       */
      public boolean hasD() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 D = 1;</code>
       *
       * <pre>
       * dimensionality of original vectors
       * </pre>
       */
      public int getD() {
        return d_;
      }
      /**
       * <code>optional uint32 D = 1;</code>
       *
       * <pre>
       * dimensionality of original vectors
       * </pre>
       */
      public Builder setD(int value) {
        bitField0_ |= 0x00000001;
        d_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 D = 1;</code>
       *
       * <pre>
       * dimensionality of original vectors
       * </pre>
       */
      public Builder clearD() {
        bitField0_ = (bitField0_ & ~0x00000001);
        d_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 V = 2;
      private int v_ ;
      /**
       * <code>optional uint32 V = 2;</code>
       *
       * <pre>
       * number of coarse quantizer centroids
       * </pre>
       */
      public boolean hasV() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 V = 2;</code>
       *
       * <pre>
       * number of coarse quantizer centroids
       * </pre>
       */
      public int getV() {
        return v_;
      }
      /**
       * <code>optional uint32 V = 2;</code>
       *
       * <pre>
       * number of coarse quantizer centroids
       * </pre>
       */
      public Builder setV(int value) {
        bitField0_ |= 0x00000002;
        v_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 V = 2;</code>
       *
       * <pre>
       * number of coarse quantizer centroids
       * </pre>
       */
      public Builder clearV() {
        bitField0_ = (bitField0_ & ~0x00000002);
        v_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 M = 3;
      private int m_ ;
      /**
       * <code>optional uint32 M = 3;</code>
       *
       * <pre>
       * number of subvectors
       * </pre>
       */
      public boolean hasM() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 M = 3;</code>
       *
       * <pre>
       * number of subvectors
       * </pre>
       */
      public int getM() {
        return m_;
      }
      /**
       * <code>optional uint32 M = 3;</code>
       *
       * <pre>
       * number of subvectors
       * </pre>
       */
      public Builder setM(int value) {
        bitField0_ |= 0x00000004;
        m_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 M = 3;</code>
       *
       * <pre>
       * number of subvectors
       * </pre>
       */
      public Builder clearM() {
        bitField0_ = (bitField0_ & ~0x00000004);
        m_ = 0;
        onChanged();
        return this;
      }

      // optional uint32 num_subquantizers = 4;
      private int numSubquantizers_ ;
      /**
       * <code>optional uint32 num_subquantizers = 4;</code>
       *
       * <pre>
       * number of subquantizer clusters
       * </pre>
       */
      public boolean hasNumSubquantizers() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 num_subquantizers = 4;</code>
       *
       * <pre>
       * number of subquantizer clusters
       * </pre>
       */
      public int getNumSubquantizers() {
        return numSubquantizers_;
      }
      /**
       * <code>optional uint32 num_subquantizers = 4;</code>
       *
       * <pre>
       * number of subquantizer clusters
       * </pre>
       */
      public Builder setNumSubquantizers(int value) {
        bitField0_ |= 0x00000008;
        numSubquantizers_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 num_subquantizers = 4;</code>
       *
       * <pre>
       * number of subquantizer clusters
       * </pre>
       */
      public Builder clearNumSubquantizers() {
        bitField0_ = (bitField0_ & ~0x00000008);
        numSubquantizers_ = 0;
        onChanged();
        return this;
      }

      // repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;
      private java.util.List<Matrix> cs_ =
        java.util.Collections.emptyList();
      private void ensureCsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          cs_ = new java.util.ArrayList<Matrix>(cs_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Matrix, Matrix.Builder, MatrixOrBuilder> csBuilder_;

      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public java.util.List<Matrix> getCsList() {
        if (csBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cs_);
        } else {
          return csBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public int getCsCount() {
        if (csBuilder_ == null) {
          return cs_.size();
        } else {
          return csBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Matrix getCs(int index) {
        if (csBuilder_ == null) {
          return cs_.get(index);
        } else {
          return csBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder setCs(
          int index, Matrix value) {
        if (csBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCsIsMutable();
          cs_.set(index, value);
          onChanged();
        } else {
          csBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder setCs(
          int index, Matrix.Builder builderForValue) {
        if (csBuilder_ == null) {
          ensureCsIsMutable();
          cs_.set(index, builderForValue.build());
          onChanged();
        } else {
          csBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder addCs(Matrix value) {
        if (csBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCsIsMutable();
          cs_.add(value);
          onChanged();
        } else {
          csBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder addCs(
          int index, Matrix value) {
        if (csBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCsIsMutable();
          cs_.add(index, value);
          onChanged();
        } else {
          csBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder addCs(
          Matrix.Builder builderForValue) {
        if (csBuilder_ == null) {
          ensureCsIsMutable();
          cs_.add(builderForValue.build());
          onChanged();
        } else {
          csBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder addCs(
          int index, Matrix.Builder builderForValue) {
        if (csBuilder_ == null) {
          ensureCsIsMutable();
          cs_.add(index, builderForValue.build());
          onChanged();
        } else {
          csBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder addAllCs(
          Iterable<? extends Matrix> values) {
        if (csBuilder_ == null) {
          ensureCsIsMutable();
          super.addAll(values, cs_);
          onChanged();
        } else {
          csBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder clearCs() {
        if (csBuilder_ == null) {
          cs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          csBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Builder removeCs(int index) {
        if (csBuilder_ == null) {
          ensureCsIsMutable();
          cs_.remove(index);
          onChanged();
        } else {
          csBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Matrix.Builder getCsBuilder(
          int index) {
        return getCsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public MatrixOrBuilder getCsOrBuilder(
          int index) {
        if (csBuilder_ == null) {
          return cs_.get(index);  } else {
          return csBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public java.util.List<? extends MatrixOrBuilder>
           getCsOrBuilderList() {
        if (csBuilder_ != null) {
          return csBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cs_);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Matrix.Builder addCsBuilder() {
        return getCsFieldBuilder().addBuilder(
            Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public Matrix.Builder addCsBuilder(
          int index) {
        return getCsFieldBuilder().addBuilder(
            index, Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Cs = 5;</code>
       *
       * <pre>
       * coarse quantizer centroids - 2 of these; size V x (D/2)
       * </pre>
       */
      public java.util.List<Matrix.Builder>
           getCsBuilderList() {
        return getCsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Matrix, Matrix.Builder, MatrixOrBuilder>
          getCsFieldBuilder() {
        if (csBuilder_ == null) {
          csBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Matrix, Matrix.Builder, MatrixOrBuilder>(
                  cs_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          cs_ = null;
        }
        return csBuilder_;
      }

      // repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;
      private java.util.List<Matrix> rs_ =
        java.util.Collections.emptyList();
      private void ensureRsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          rs_ = new java.util.ArrayList<Matrix>(rs_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Matrix, Matrix.Builder, MatrixOrBuilder> rsBuilder_;

      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public java.util.List<Matrix> getRsList() {
        if (rsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(rs_);
        } else {
          return rsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public int getRsCount() {
        if (rsBuilder_ == null) {
          return rs_.size();
        } else {
          return rsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Matrix getRs(int index) {
        if (rsBuilder_ == null) {
          return rs_.get(index);
        } else {
          return rsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder setRs(
          int index, Matrix value) {
        if (rsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRsIsMutable();
          rs_.set(index, value);
          onChanged();
        } else {
          rsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder setRs(
          int index, Matrix.Builder builderForValue) {
        if (rsBuilder_ == null) {
          ensureRsIsMutable();
          rs_.set(index, builderForValue.build());
          onChanged();
        } else {
          rsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder addRs(Matrix value) {
        if (rsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRsIsMutable();
          rs_.add(value);
          onChanged();
        } else {
          rsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder addRs(
          int index, Matrix value) {
        if (rsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRsIsMutable();
          rs_.add(index, value);
          onChanged();
        } else {
          rsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder addRs(
          Matrix.Builder builderForValue) {
        if (rsBuilder_ == null) {
          ensureRsIsMutable();
          rs_.add(builderForValue.build());
          onChanged();
        } else {
          rsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder addRs(
          int index, Matrix.Builder builderForValue) {
        if (rsBuilder_ == null) {
          ensureRsIsMutable();
          rs_.add(index, builderForValue.build());
          onChanged();
        } else {
          rsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder addAllRs(
          Iterable<? extends Matrix> values) {
        if (rsBuilder_ == null) {
          ensureRsIsMutable();
          super.addAll(values, rs_);
          onChanged();
        } else {
          rsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder clearRs() {
        if (rsBuilder_ == null) {
          rs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          rsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Builder removeRs(int index) {
        if (rsBuilder_ == null) {
          ensureRsIsMutable();
          rs_.remove(index);
          onChanged();
        } else {
          rsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Matrix.Builder getRsBuilder(
          int index) {
        return getRsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public MatrixOrBuilder getRsOrBuilder(
          int index) {
        if (rsBuilder_ == null) {
          return rs_.get(index);  } else {
          return rsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public java.util.List<? extends MatrixOrBuilder>
           getRsOrBuilderList() {
        if (rsBuilder_ != null) {
          return rsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rs_);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Matrix.Builder addRsBuilder() {
        return getRsFieldBuilder().addBuilder(
            Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public Matrix.Builder addRsBuilder(
          int index) {
        return getRsFieldBuilder().addBuilder(
            index, Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix Rs = 6;</code>
       *
       * <pre>
       * rotations - 2 * V of these, each size D/2 x D/2
       * </pre>
       */
      public java.util.List<Matrix.Builder>
           getRsBuilderList() {
        return getRsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Matrix, Matrix.Builder, MatrixOrBuilder>
          getRsFieldBuilder() {
        if (rsBuilder_ == null) {
          rsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Matrix, Matrix.Builder, MatrixOrBuilder>(
                  rs_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          rs_ = null;
        }
        return rsBuilder_;
      }

      // repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;
      private java.util.List<Vector> mus_ =
        java.util.Collections.emptyList();
      private void ensureMusIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          mus_ = new java.util.ArrayList<Vector>(mus_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Vector, Vector.Builder, VectorOrBuilder> musBuilder_;

      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public java.util.List<Vector> getMusList() {
        if (musBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mus_);
        } else {
          return musBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public int getMusCount() {
        if (musBuilder_ == null) {
          return mus_.size();
        } else {
          return musBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Vector getMus(int index) {
        if (musBuilder_ == null) {
          return mus_.get(index);
        } else {
          return musBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder setMus(
          int index, Vector value) {
        if (musBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMusIsMutable();
          mus_.set(index, value);
          onChanged();
        } else {
          musBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder setMus(
          int index, Vector.Builder builderForValue) {
        if (musBuilder_ == null) {
          ensureMusIsMutable();
          mus_.set(index, builderForValue.build());
          onChanged();
        } else {
          musBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder addMus(Vector value) {
        if (musBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMusIsMutable();
          mus_.add(value);
          onChanged();
        } else {
          musBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder addMus(
          int index, Vector value) {
        if (musBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMusIsMutable();
          mus_.add(index, value);
          onChanged();
        } else {
          musBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder addMus(
          Vector.Builder builderForValue) {
        if (musBuilder_ == null) {
          ensureMusIsMutable();
          mus_.add(builderForValue.build());
          onChanged();
        } else {
          musBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder addMus(
          int index, Vector.Builder builderForValue) {
        if (musBuilder_ == null) {
          ensureMusIsMutable();
          mus_.add(index, builderForValue.build());
          onChanged();
        } else {
          musBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder addAllMus(
          Iterable<? extends Vector> values) {
        if (musBuilder_ == null) {
          ensureMusIsMutable();
          super.addAll(values, mus_);
          onChanged();
        } else {
          musBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder clearMus() {
        if (musBuilder_ == null) {
          mus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          musBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Builder removeMus(int index) {
        if (musBuilder_ == null) {
          ensureMusIsMutable();
          mus_.remove(index);
          onChanged();
        } else {
          musBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Vector.Builder getMusBuilder(
          int index) {
        return getMusFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public VectorOrBuilder getMusOrBuilder(
          int index) {
        if (musBuilder_ == null) {
          return mus_.get(index);  } else {
          return musBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public java.util.List<? extends VectorOrBuilder>
           getMusOrBuilderList() {
        if (musBuilder_ != null) {
          return musBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mus_);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Vector.Builder addMusBuilder() {
        return getMusFieldBuilder().addBuilder(
            Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public Vector.Builder addMusBuilder(
          int index) {
        return getMusFieldBuilder().addBuilder(
            index, Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Vector mus = 7;</code>
       *
       * <pre>
       * residual means - 2 * V of these, each size D/2
       * </pre>
       */
      public java.util.List<Vector.Builder>
           getMusBuilderList() {
        return getMusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Vector, Vector.Builder, VectorOrBuilder>
          getMusFieldBuilder() {
        if (musBuilder_ == null) {
          musBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Vector, Vector.Builder, VectorOrBuilder>(
                  mus_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          mus_ = null;
        }
        return musBuilder_;
      }

      // repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;
      private java.util.List<Matrix> subs_ =
        java.util.Collections.emptyList();
      private void ensureSubsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          subs_ = new java.util.ArrayList<Matrix>(subs_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Matrix, Matrix.Builder, MatrixOrBuilder> subsBuilder_;

      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public java.util.List<Matrix> getSubsList() {
        if (subsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(subs_);
        } else {
          return subsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public int getSubsCount() {
        if (subsBuilder_ == null) {
          return subs_.size();
        } else {
          return subsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Matrix getSubs(int index) {
        if (subsBuilder_ == null) {
          return subs_.get(index);
        } else {
          return subsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder setSubs(
          int index, Matrix value) {
        if (subsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsIsMutable();
          subs_.set(index, value);
          onChanged();
        } else {
          subsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder setSubs(
          int index, Matrix.Builder builderForValue) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.set(index, builderForValue.build());
          onChanged();
        } else {
          subsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder addSubs(Matrix value) {
        if (subsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsIsMutable();
          subs_.add(value);
          onChanged();
        } else {
          subsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder addSubs(
          int index, Matrix value) {
        if (subsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSubsIsMutable();
          subs_.add(index, value);
          onChanged();
        } else {
          subsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder addSubs(
          Matrix.Builder builderForValue) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.add(builderForValue.build());
          onChanged();
        } else {
          subsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder addSubs(
          int index, Matrix.Builder builderForValue) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.add(index, builderForValue.build());
          onChanged();
        } else {
          subsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder addAllSubs(
          Iterable<? extends Matrix> values) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          super.addAll(values, subs_);
          onChanged();
        } else {
          subsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder clearSubs() {
        if (subsBuilder_ == null) {
          subs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          subsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Builder removeSubs(int index) {
        if (subsBuilder_ == null) {
          ensureSubsIsMutable();
          subs_.remove(index);
          onChanged();
        } else {
          subsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Matrix.Builder getSubsBuilder(
          int index) {
        return getSubsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public MatrixOrBuilder getSubsOrBuilder(
          int index) {
        if (subsBuilder_ == null) {
          return subs_.get(index);  } else {
          return subsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public java.util.List<? extends MatrixOrBuilder>
           getSubsOrBuilderList() {
        if (subsBuilder_ != null) {
          return subsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(subs_);
        }
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Matrix.Builder addSubsBuilder() {
        return getSubsFieldBuilder().addBuilder(
            Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public Matrix.Builder addSubsBuilder(
          int index) {
        return getSubsFieldBuilder().addBuilder(
            index, Matrix.getDefaultInstance());
      }
      /**
       * <code>repeated .org.elasticsearch.protobuf.generated.Matrix subs = 8;</code>
       *
       * <pre>
       * subquantizer centroids - M of these, each size num_subquantizers x (D/2))
       * </pre>
       */
      public java.util.List<Matrix.Builder>
           getSubsBuilderList() {
        return getSubsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Matrix, Matrix.Builder, MatrixOrBuilder>
          getSubsFieldBuilder() {
        if (subsBuilder_ == null) {
          subsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Matrix, Matrix.Builder, MatrixOrBuilder>(
                  subs_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          subs_ = null;
        }
        return subsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.elasticsearch.protobuf.generated.LOPQModelParams)
    }

    static {
      defaultInstance = new LOPQModelParams(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.elasticsearch.protobuf.generated.LOPQModelParams)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_elasticsearch_protobuf_generated_Vector_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_elasticsearch_protobuf_generated_Vector_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_elasticsearch_protobuf_generated_Matrix_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_elasticsearch_protobuf_generated_Matrix_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020lopq_model.proto\022$org.elasticsearch.pr" +
      "otobuf.generated\"\034\n\006Vector\022\022\n\006values\030\001 \003" +
      "(\002B\002\020\001\"+\n\006Matrix\022\022\n\006values\030\001 \003(\002B\002\020\001\022\r\n\005" +
      "shape\030\002 \003(\r\"\270\002\n\017LOPQModelParams\022\t\n\001D\030\001 \001" +
      "(\r\022\t\n\001V\030\002 \001(\r\022\t\n\001M\030\003 \001(\r\022\031\n\021num_subquant" +
      "izers\030\004 \001(\r\0228\n\002Cs\030\005 \003(\0132,.org.elasticsea" +
      "rch.protobuf.generated.Matrix\0228\n\002Rs\030\006 \003(" +
      "\0132,.org.elasticsearch.protobuf.generated" +
      ".Matrix\0229\n\003mus\030\007 \003(\0132,.org.elasticsearch" +
      ".protobuf.generated.Vector\022:\n\004subs\030\010 \003(\013",
      "2,.org.elasticsearch.protobuf.generated." +
      "MatrixBQ\n8com.ngdata.hbaseindexer.faceRe" +
      "trieval.protobuf.generatedB\023LOPQModelPar" +
      "ametersH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_org_elasticsearch_protobuf_generated_Vector_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_org_elasticsearch_protobuf_generated_Vector_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_elasticsearch_protobuf_generated_Vector_descriptor,
              new String[] { "Values", });
          internal_static_org_elasticsearch_protobuf_generated_Matrix_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_org_elasticsearch_protobuf_generated_Matrix_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_elasticsearch_protobuf_generated_Matrix_descriptor,
              new String[] { "Values", "Shape", });
          internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_org_elasticsearch_protobuf_generated_LOPQModelParams_descriptor,
              new String[] { "D", "V", "M", "NumSubquantizers", "Cs", "Rs", "Mus", "Subs", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
